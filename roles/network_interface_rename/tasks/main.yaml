---
- name: Check if net0 interface exists
  ansible.builtin.set_fact:
    net0_exists: "{{ network_interface_rename__new_interface_name }} in ansible_facts.interfaces"

- name: Log if net0 interface exits
  ansible.builtin.debug:
    msg: "Interface {{ network_interface_rename__new_interface_name }} already exists. Skipping rename process."
  when: net0_exists

- name: Changing Network Interface
  when: not net0_exists
  block:
    # 1. identify active interface
    - name: Display current active interface facts
      ansible.builtin.debug:
        msg: "Interface is {{ ansible_default_ipv4.interface }}, Mac is {{ ansible_default_ipv4.macaddress }}"

    # 3. find current confing
    - name: Find existing netplan configurations
      ansible.builtin.find:
        paths: /etc/netplan
        patterns: "*.yaml"
      register: cloud_netplan_files

    # 4. fail if there are more than one config file
    - name: Fail if multiple netplan configuration files are found
      ansible.builtin.fail:
        msg: >-
          Multiple netplan configuration files found:
          {{ cloud_netplan_files.files | map(attribute='path') | list | join(', ') }}.
          This role only supports a single netplan configuration file.
      when: cloud_netplan_files.files | length > 1

    # 5. change the name in the existing netplan file
    - name: Change the set-name value in netplan configuration
      ansible.builtin.lineinfile:
        path: "{{ cloud_netplan_files.files | map(attribute='path') | first }}"
        regexp: '^(\s+set-name:\s+).*$'
        line: '\1"{{ network_interface_rename__new_interface_name }}"'
        backrefs: true

    # 6. netplan apply
    - name: Apply netplan config
      ansible.builtin.command: netplan apply
      register: netplan_result
      failed_when: netplan_result.rc != 0
      changed_when: false

    - name: Wait for network to stabilize
      ansible.builtin.pause:
        seconds: 5

    # 7. display information
    - name: Gather updated facts
      ansible.builtin.setup:
        gather_subset:
          - network

- name: Display information about renamed interface
  ansible.builtin.debug:
    msg:
      - "===== Interface Information ====="
      - "Address: {{ ansible_facts.default_ipv4.address }}"
      - "Gateway: {{ ansible_facts.default_ipv4.gateway }}"
      - "Interface: {{ ansible_facts.default_ipv4.interface }}"
      - "MAC Address: {{ ansible_facts.default_ipv4.macaddress }}"
      - "Netmask: {{ ansible_facts.default_ipv4.netmask }}"
      - "Network: {{ ansible_facts.default_ipv4.network }}"
      - "Prefix: {{ ansible_facts.default_ipv4.prefix }}"
      - "================================="
