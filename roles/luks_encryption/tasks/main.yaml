---
# 1. run prerequisites tasks
- name: Install neccessary packages
  ansible.builtin.apt:
    name:
      - cryptsetup
      - coreutils
      - parted
      - util-linux
    state: present

- name: Create necessary directories on local machine
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0700'
  run_once: true
  delegate_to: localhost
  become: false
  loop:
    - "{{ luks_encryption__local_secret_dir }}"
    - "{{ luks_encryption__local_secret_dir }}/{{ luks_encryption__keyfiles_dir }}"
    - "{{ luks_encryption__local_secret_dir }}/{{ luks_encryption__headers_dir }}"

- name: Create necessary directories on target machine
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0700'
  loop:
    - "{{ luks_encryption__remote_secret_dir }}"
    - "{{ luks_encryption__remote_secret_dir }}/{{ luks_encryption__keyfiles_dir }}"
    - "{{ luks_encryption__remote_secret_dir }}/{{ luks_encryption__headers_dir }}"

# 2. set encryption targets as a list
- name: Set encryption targets
  ansible.builtin.set_fact:
    encryption_targets:
      - id: "disk"
        enabled: "{{ secondary_disk is defined and secondary_disk != '' }}"
        device: "{{ secondary_disk | default('') }}"
        mount_point: "{{ luks_encryption__disk_mount }}"
        type: "disk"
      - id: "partition"
        enabled: "{{ partition_on_primary is defined and partition_on_primary != '' }}"
        device: "{{ partition_on_primary | default('') }}"
        mount_point: "{{ luks_encryption__partition_mount }}"
        type: "partition"

# 3. run common tasks with variable isolation
- name: Process encryption targets
  ansible.builtin.include_tasks: validate_encrypt.yaml
  loop: "{{ encryption_targets }}"
  loop_control:
    loop_var: encryption_target
    label: "{{ encryption_target.type }}: {{ encryption_target.device }}"
  when: encryption_target.enabled | bool
