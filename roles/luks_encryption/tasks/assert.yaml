---
- name: Ensure required variables are defined
  ansible.builtin.assert:
    that:
      - luks_encryption__local_secret_dir is defined
      - luks_encryption__remote_secret_dir is defined
      - luks_encryption__keyfiles_dir is defined
      - luks_encryption__headers_dir is defined
      - luks_encryption__keyfile_source_dev is defined
      - luks_encryption__keyfile_size is defined
      - luks_encryption__keyfile_cipher_default is defined
      - luks_encryption__keyfile_cipher_light is defined
    msg: >-
      Missing required variables. Please define:
      luks_encryption__local_secret_dir, luks_encryption__remote_secret_dir, luks_encryption__keyfile_source_dev,
      luks_encryption__keyfile_size, luks_encryption__keyfile_cipher_default and luks_encryption__keyfile_cipher_light."

- name: Check if devices exist
  ansible.builtin.stat:
    path: "{{ target_device }}"
  register: device_stats
  failed_when: not device_stats.stat.exists

- name: Gather mount facts
  ansible.builtin.setup:
    gather_subset:
      - mounts

- name: Set device safe name
  ansible.builtin.set_fact:
    device_safe_name: "{{ target_device | regex_replace('/', '-') }}"

- name: Set device mapper name
  ansible.builtin.set_fact:
    device_mapper_name: "/dev/mapper/encrypted{{ device_safe_name }}"

- name: Fail if devices are mounted
  ansible.builtin.fail:
    msg: "Device {{ device_mapper_name }} is currently mounted. Danger of overwriting data!"
  when: target_name in ansible_mounts | map(attribute='mount') | list

- name: Fail if device mapper for this device is mounted
  ansible.builtin.fail:
    msg: "Device mapper for {{ target_device }} is currently mounted. Danger of overwriting data!"
  when: device_mapper_name in ansible_mounts | map(attribute='device') | list

- name: Fail if mount point is already in use
  ansible.builtin.fail:
    msg: "Mount point {{ target_name }} is already in use. Danger of overwriting data!"
  when: target_name in ansible_mounts | map(attribute='mount') | list

- name: Check if mapper name is already configured in crypttab
  ansible.builtin.lineinfile:
    path: /etc/crypttab
    regexp: "encrypted{{ device_safe_name }}"
    state: absent
  check_mode: true
  register: mapper_name_check
  changed_when: false

- name: Fail if mapper name is already configured in crypttab
  ansible.builtin.fail:
    msg: "Mapper name 'encrypted{{ device_safe_name }}' is already configured in /etc/crypttab. Danger of overwriting data!"
  when: mapper_name_check.found != 0
