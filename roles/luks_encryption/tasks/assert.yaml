---
- name: Ensure required variables are defined
  ansible.builtin.assert:
    that:
      - luks_encryption__local_secret_dir is defined
      - luks_encryption__remote_secret_dir is defined
      - luks_encryption__keyfiles_dir is defined
      - luks_encryption__headers_dir is defined
      - luks_encryption__keyfile_source_dev is defined
      - luks_encryption__keyfile_size is defined
      - luks_encryption__keyfile_cipher_default is defined
      - luks_encryption__keyfile_cipher_light is defined
    msg: >-
      Missing required variables. Please define:
      luks_encryption__local_secret_dir, luks_encryption__remote_secret_dir, luks_encryption__keyfile_source_dev,
      luks_encryption__keyfile_size, luks_encryption__keyfile_cipher_default and luks_encryption__keyfile_cipher_light."

- name: Check if devices exist
  ansible.builtin.stat:
    path: "{{ target_device }}"
  register: device_stats
  failed_when: not device_stats.stat.exists

- name: Gather mount facts
  ansible.builtin.setup:
    gather_subset:
      - mounts

- name: Set device safe name
  ansible.builtin.set_fact:
    device_safe_name: "{{ target_device | regex_replace('/', '-') }}"

- name: Set device mapper name
  ansible.builtin.set_fact:
    device_mapper_name: "/dev/mapper/encrypted{{ device_safe_name }}"

- name: Check if devices are mounted
  ansible.builtin.set_fact:
    device_in_use: "Device {{ device_mapper_name }} is currently mounted."
  when: target_device in ansible_mounts | map(attribute='mount') | list

- name: "Check if device mapper for this device is mounted: {{ target_device }}"
  ansible.builtin.set_fact:
    dev_mapper_in_use: "Device mapper for {{ target_device }} is currently mounted."
  when: device_mapper_name in ansible_mounts | map(attribute='device') | list

- name: "Check if mount point is already in use: {{ target_name }}"
  ansible.builtin.set_fact:
    mount_point_in_use: "Mount point {{ target_name }} is already in use."
  when: target_name in ansible_mounts | map(attribute='mount') | list

- name: Check if mapper name is already configured in crypttab
  ansible.builtin.lineinfile:
    path: /etc/crypttab
    regexp: "encrypted{{ device_safe_name }}"
    state: absent
  check_mode: true
  register: mapper_name_check
  changed_when: false

- name: Check if mapper name is already configured in crypttab
  ansible.builtin.set_fact:
    dev_mapper_in_crypttab: "Mapper name 'encrypted{{ device_safe_name }}' is already configured in /etc/crypttab."
  when: mapper_name_check.found != 0

- name: Set variable to skip the rest of tasks
  ansible.builtin.set_fact:
    skip_tasks: true
  when: device_in_use is defined or dev_mapper_in_use is defined or mount_point_in_use is defined or dev_mapper_in_crypttab is defined

- name: Log warning if tasks skipped
  ansible.builtin.debug:
    msg: >-
      WARNING:
      {% if device_in_use is defined %}
        {{ device_in_use }};
      {% endif %}
      {% if dev_mapper_in_use is defined %}
        {{ dev_mapper_in_use }};
      {% endif %}
      {% if mount_point_in_use is defined %}
        {{ mount_point_in_use }};
      {% endif %}
      {% if dev_mapper_in_crypttab is defined %}
        {{ dev_mapper_in_crypttab }};
      {% endif %}.
      Danger of overwriting data! Skipping remaining tasks for {{ target_device }}"
  when: skip_tasks is defined
